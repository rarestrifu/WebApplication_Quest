##connect to database
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://localhost:5432/postgres
spring.datasource.username=postgres
spring.datasource.password=Fane197@

##JPA Config
spring.jpa.properties..hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=create
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false

##Swagger custom path
springdoc.swagger-ui.path=/swagger

spring.servlet.session.cookie.http-only=true
spring.servlet.session.cookie.same-site=lax
spring.session.store-type=none
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.scope=email,profile
spring.security.oauth2.client.provider.google.issuer-uri=https://accounts.google.com
spring.security.oauth2.client.registration.google.client-name=Google
spring.security.oauth2.client.registration.google.authorization-grant-type=authorization_code
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo
spring.security.oauth2.client.registration.google.client-authentication-method=basic

# Allow cross-origin requests with credentials from localhost:3000
spring.mvc.allow-credentials=true
spring.mvc.cross-origin.allowed-origins=http://localhost:3000
spring.mvc.cross-origin.allowed-methods=GET,POST
spring.mvc.cross-origin.allowed-headers=Content-Type,Authorization